def merge(A, p, q, r):
    n1, n2= q - p + 1, r - q
    L, R=[0]n1, [0]n2
    for i in range(0,n1): L[i]=A[p+i]
    for j in range(0,n2): R[j]=A[q+1+j]
    i,j,k = 0,0,p
    while(i<n1 and j<n2):
        if L[i]<=R[j]:
            A[k]=L[i]
            i, k=i+1, k+1
        elif L[i]>=R[j]:
            A[k]=R[j]
            j+=1
            k+=1
    if i>n1:
       while(j<n2):
            A[k]=R[j]
            j+=1
            k+=1
    else:
       while(i<n1):
            A[k]=L[i]
            i+=1
            k+=1

def mergeSort(A, p, r):
    if (p<r):
        q = int((p + r) / 2)
        mergeSort(A, p, q)
        mergeSort(A, q + 1, r)
        merge(A, p, q, r)
def file_io(input_file, output_file):
    input_file_lst = input_file.read().split('\n')
    lst_len = int(input_file_lst[0])
    array = input_file_lst[1].split(' ')
    array_int = []
    for i in array:
        array_int.append(int(i))
    mergeSort(array_int, 0, lst_len - 1)
    for i in array_int:
        print(i,end=" ", file=output_file)


input_file = open('input2', mode='r')
output_file= open('output2.txt', mode='w')
input_file_lst = input_file.read().split('\n')
lst_len = int(input_file_lst[0])
array = input_file_lst[1].split(' ')
array_int = []
for i in array:
    array_int.append(int(i))
mergeSort(array_int, 0, lst_len - 1)
for i in array_int:
    print(i,end=" ", file=output_file)